#!/bin/make

SHELL := /bin/bash
.DEFAULT_GOAL := run
.DELETE_ON_ERROR:
.ONESHELL:

REMOTE_IP							 = 159.89.21.248
REMOTE_HOSTNAME				 = localhost
REMOTE_PORT						 = 22
REMOTE_HOST						 = $(REMOTE_HOSTNAME):$(REMOTE_PORT)
REMOTE_LOGIN					 = admin
REMOTE_HOSTSFILE			 = /home/pnoul/hosts
REMOTE_ACCOUNT_ADMIN	 = admin

BINDIR								 = /home/pnoul/tmp
PUSHIP								 = ./puship
PULLIP								 = ./pullip

# minute hours day-of-month month day-of-week USER
CROND_PUSHIP_LOGFILE   = ~/puship.log
CROND_PUSHIP_RUNTIME	 = */2 * * * *
CROND_PUSHIP_CONFIG		 = $(CROND_PUSHIP_RUNTIME) $(REMOTE_LOGIN) $(DESTDIR)$(BINDIR)$(PUSHIP)
CROND_PUSHIP_CONFIG = yolo

ssh										 = /usr/bin/ssh
scp										 = /usr/bin/scp
chmod									 = /usr/bin/chmod
chown									 = /usr/bin/chown
sshflags							 = PasswordAuthentication no
m4										 = /usr/bin/m4
cp										 = /usr/bin/cp
rm										 = /usr/bin/rm
cat										 = /usr/bin/cat
crond									 = /usr/bin/crond

build: crontab $(PUSHIP) $(PULLIP)

crontab: crontab.conf
	@$(m4) -DCROND_PUSHIP_CONFIG="\
	# 1st PUSHIP configuration
	# Intended for system wide use through the file $(SYSCONFDIR)/crontab
	$(CROND_PUSHIP_RUNTIME) $(USER) $(BINDIR)/$(PUSHIP) >> $(CROND_PUSHIP_LOGFILE) 2>&1
	  
	# 2nd PUSHIP configuration
	# Intended for running through crontab -e
	$(CROND_PUSHIP_RUNTIME) $(BINDIR)/$(PUSHIP) >> $(CROND_PUSHIP_LOGFILE) 2>&1
	" \
		 -DCROND_TEMPLATE_MSG="\
	# This file has been automatically generated by Make.
	#
	# There are 2 configurations for PUSHIP within this file.
	#
	# 1.
	# 	Intended for system wide use through $(SYSCONFDIR)/crontab.
	# 2.
	#		Intended for user use through crontab -e
	#
	# If you do not know which configuration to pick, go with the 1st.
	" crontab.conf > crontab
	$(chmod) --verbose 644 crontab

$(PUSHIP): puship.sh
	$(cat) $< > $@
	$(chmod) --verbose 755 $@

$(PULLIP): pullip.sh
	$(cat) $< > $@
	$(chmod) --verbose 755 $@

install: build setup_host setup_remote \
				install_pullip install_puship schedule_puship
	@echo "Done !!"

schedule_puship: setup_crond

setup_crond: run_as_root
# 1. Ensure packages up to date
# 2. Download crond service
# 3. Enable crond through systemd

setup_remote: run_as_root
# 1. Connect to REMOTE_HOST
# 2. Create a user and group named REMOTE_ACCOUNT_ADMIN
# 3. Add root to the group REMOTE_ACCOUNT_ADMIN
# 4. Change the owning Group of REMOTE_HOSTSFILE to REMOTE_ACCOUNT_ADMIN
# 5. Change the mode bits of REMOTE_HOSTSFILE to rw-rw-r
	$(ssh) -o '$(sshflags)' 'ssh://root@$(REMOTE_HOST)' "\
		useradd --user-group --no-create-home --comment 'system administrator' $(REMOTE_ACCOUNT_ADMIN); \
		usermod --append --groups $(REMOTE_ACCOUNT_ADMIN) root; \
		chown --verbose :$(REMOTE_ACCOUNT_ADMIN) $(REMOTE_HOSTSFILE); \
		chmod --verbose 664 $(REMOTE_HOSTSFILE)"

install_pullip: run_as_root
# 1. Ensure that the installation directory DESTDIR/BINDIR exists at REMOTE_HOST
# 3. Install PULLIP over to REMOTE_HOST at DESTDIR/BINDIR
	$(ssh) -o '$(sshflags)' 'ssh://root@$(REMOTE_HOST)' "\
		mkdir --verbose --parents $(DESTDIR)$(BINDIR)"
	$(scp) -o '$(sshflags)' $(PULLIP) 'scp://root@$(REMOTE_HOST)/$(DESTDIR)$(BINDIR)'

install_puship: run_as_root
	$(cp) -f $(PUSHIP) $(DESTDIR)$(BINDIR)

uninstall: uninstall_puship uninstall_pullip

uninstall_puship:
	$(rm) --verbose --force $(DESTDIR)$(BINDIR)/$(PUSHIP)

uninstall_pullip:
# 1. Remove PULLIP from REMOTE_HOST
	$(ssh) -o '$(sshflags)' 'ssh://root@$(REMOTE_HOST)' "\
		rm --verbose --force $(DESTDIR)$(BINDIR)/$(PULLIP)"

run_as_root:
	@if [[ "$(USER)" != 'root' ]]; then
		echo target needs root privileges to run
		exit 1
	fi

clean:
	rm -f $(PUSHIP)
	rm -f $(PULLIP)
	rm -f crontab

PHONY: build install uninstall clean
